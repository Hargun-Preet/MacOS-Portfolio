@import "tailwindcss";
@custom-variant dark (&:where(.dark, .dark *));



:root {
  --background: #ffffff;
  --foreground: #171717;
  --dock-background: rgba(255, 255, 255, 0.25)
  --pattern-fg: #d4d4d4;
  color-scheme: light dark;
}

:root {
  /* This is for your light theme */
  --notes-yellow: #facc15; /* Example: A rich yellow */
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  
  --blockquote-border: #e5e7eb; /* Light gray */
  --blockquote-text: #6b7280;    /* Medium gray */
  
  --code-bg: #f3f4f6;          /* Very light gray */
  --code-text: #111827;        /* Dark gray for text */
  
  --highlight-bg: color-mix(in oklch, var(--notes-yellow) 50%, white);
  
  --link-text: #ca8a04; /* A darker yellow for better contrast on white */
}

.dark {
  /* This overrides the variables for your dark theme */
  --blockquote-border: #404040; /* Darker gray */
  --blockquote-text: #a1a1aa;    /* Lighter gray */
  
  --code-bg: #262626;          /* Dark gray */
  --code-text: #e5e7eb;        /* Light gray for text */
  
  --highlight-bg: color-mix(in oklch, var(--notes-yellow) 30%, #171717); /* Mix with dark bg */
  
  --link-text: #facc15; /* Your base yellow has better contrast on dark */
}

/* .light {
  --background: #EAEAEA;
  --foreground: black;
  --dock-background: rgba(255, 255, 255, 0.5);
} */

@layer base {
  /* 1. Set the default macOS cursor for the entire application
  html, body, *, ::before, ::after {
    cursor: url('/assets/cursors/cursor-default.png'), auto;
  }

  /* 2. Set the pointer hand for interactive elements */
  /* a, button, [role="button"], input[type="submit"], input[type="reset"] {
    cursor: url('/assets/cursors/cursor-pointer.png'), pointer;
  } */
  
  /* 3. NEW: Set the text select cursor for text and input elements */
  /* p, h1, h2, h3, h4, h5, h6, span, li, blockquote,
  input[type="text"],
  input[type="search"],
  input[type="email"],
  input[type="password"],
  textarea {
    cursor: url('/assets/cursors/cursor-text.png') 2 10, text;
  } */

  /* 4. Define the grab cursors for draggable items */
  /* .cursor-grab {
    cursor: url('/assets/cursors/cursor-grab.png') 10 10, grab;
  }
  .cursor-grabbing {
    cursor: url('/assets/cursors/cursor-grab.png') 10 10, grabbing;
  } */ 
  
   :root {
    --background: #ffffff;
    --foreground: #171717;
    --dock-background: rgba(255, 255, 255, 0.25)

  }

  html {
    --pattern-fg: #eceaea;
  }

  html.dark {
    --background: 222.2 84% 4.9%;
    --foreground: 0 0% 100%;
    --pattern-fg: #535353;
  }
}

@layer base {
  * {
    @apply transition-colors duration-200;
  }
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  cursor: url("/assets/cursors/cursor-default.png"), auto;
}

a, button {
  cursor: url('/assets/cursors/cursor-pointer.png') 8 8, pointer;
}

.cursor-grab {
  cursor: url('/assets/cursors/cursor-grab.png') 8 8, grab;
}

.cursor-grab:active {
  cursor: url('/assets/cursors/cursor-grabbing.png') 0 0, grabbing;
}

/* input {
  cursor: url('/assets/cursors/cursor-text.png') 8 8, text;
} */

/* Genie Effect Styles - Exact match to original jQuery implementation */
.genie,
.genie-snapshot-container {
  position: fixed;
  background-repeat: no-repeat;
  background-size: cover;
  z-index: 10000;
  pointer-events: none;
}

.genie .genie-step {
  background-repeat: no-repeat;
  background-image: inherit;
  position: absolute;
  pointer-events: none;
}

/* Expand animations - match original timing exactly */
.genie.expand .genie-step,
.genie-snapshot-container.expand .genie-step {
  -moz-transition: background-position 800ms ease-in-out;
  -webkit-transition: background-position 800ms ease-in-out;
  -o-transition: background-position 800ms ease-in-out;
  -ms-transition: background-position 800ms ease-in-out;
  transition: background-position 800ms ease-in-out;
}

/* Collapse animations - match original timing exactly */
.genie.collapse .genie-step,
.genie-snapshot-container.collapse .genie-step {
  -moz-transition: all 300ms ease-in-out;
  -webkit-transition: all 300ms ease-in-out;
  -o-transition: all 300ms ease-in-out;
  -ms-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

/* Pace change for second phase - exact original implementation */
.genie.collapse.change-pace .genie-step,
.genie-snapshot-container.collapse.change-pace .genie-step {
  -moz-transition: background-position 800ms ease-in-out;
  -webkit-transition: background-position 800ms ease-in-out;
  -o-transition: background-position 800ms ease-in-out;
  -ms-transition: background-position 800ms ease-in-out;
  transition: background-position 800ms ease-in-out;
}

.genie.expand.change-pace .genie-step,
.genie-snapshot-container.expand.change-pace .genie-step {
  -moz-transition: all 300ms ease-in-out;
  -webkit-transition: all 300ms ease-in-out;
  -o-transition: all 300ms ease-in-out;
  -ms-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

/* --- Custom Range Slider Styles --- */

/* For Webkit browsers (Chrome, Safari, Edge) */
.custom-range::-webkit-slider-thumb {
  -webkit-appearance: none; /* Remove default styling */
  appearance: none;
  width: 16px; /* Set your desired width */
  height: 16px; /* Set your desired height */
  background-color: #ffffff; /* This is a nice blue color */
  border: 1px solid #9ca3af; 
  border-radius: 9999px; /* Make it a circle */
  cursor: pointer;
   /* Center the thumb vertically on the track */
}

/* For Firefox */
.custom-range::-moz-range-thumb {
  width: 16px;
  height: 16px;
  background-color: #ffffff; /* Same blue color */
  border-radius: 9999px;
  border: 1px solid #9ca3af; 
  cursor: pointer;
  border: none; /* Firefox might add a border */
}

.my-gray-icon {
  /* This filter combination will turn black to a medium-dark gray */
  filter: brightness(0.6) grayscale(1); 
  /*
    - brightness(0.6) makes black (0% brightness) into a dark gray (60% brightness).
    - grayscale(1) ensures it's purely grayscale, removing any lingering color.
  */
}

.font-fira-code {
  font-family: "Fira Code", monospace;
  font-optical-sizing: auto;
  font-weight: 300;
  font-style: normal;
}

.ascii-art {
  font-size: 4px;   /* smaller text */
  line-height: 4px; /* tighter vertical spacing */
}

@layer utilities {
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  .animate-fade-in {
    animation: fadeIn 1s ease-in-out;
  }
}

.content-with-stripes {
  position: relative;
}

.content-with-stripes::before,
.content-with-stripes::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  width: 4rem; /* Controls the width of the stripe */
  
  /* This is YOUR diagonal pattern */
  background-image: repeating-linear-gradient(
    -45deg,
    rgba(0, 0, 0, 0.1),       /* Light mode line color */
    rgba(0, 0, 0, 0.1) 1px,
    transparent 1px,
    transparent 6px
  );
  
  
}

/* Dark mode version of the lines */
.dark .content-with-stripes::before,
.dark .content-with-stripes::after {
  background-image: repeating-linear-gradient(
    -45deg,
    rgba(255, 255, 255, 0.05), /* Dark mode line color */
    rgba(255, 255, 255, 0.05) 1px,
    transparent 1px,
    transparent 6px
  );
}

/* Position the stripes */
.content-with-stripes::before {
  right: 100%;
  border-left: 1px solid rgba(0, 0, 0, 0.1);
}
.dark .content-with-stripes::before {
  border-color: rgba(255, 255, 255, 0.05); 
}


.content-with-stripes::after {
  left: 100%;
  border-right: 1px solid rgba(0, 0, 0, 0.1);
}

.dark .content-with-stripes::after {
  border-color: rgba(255, 255, 255, 0.05); 
}

.toolbar-scroll {
  overflow-x: auto;
  white-space: nowrap;
  -webkit-overflow-scrolling: touch;
}
.toolbar-scroll::-webkit-scrollbar {
  height: 6px;
}
.toolbar-scroll::-webkit-scrollbar-thumb {
  background-color: oklch(0.922 0 0);
  border-radius: 999px;
}

/* Shared tint for icons and active tools */
.notes-tint {
  color: var(--notes-yellow);
}
.notes-tool[data-state="on"],
.notes-tool:hover {
  color: var(--notes-yellow);
}

/* TipTap content styles to fix headings, lists, checklists, blockquotes, and code blocks */
.tiptap {
  line-height: 1.6;
  @apply text-black dark:text-white;
}

/* In your globals.css */

/* 1. Global Reset for .ProseMirror (Base and Focus) */
.ProseMirror {
  /* Set a transparent border by default to prevent layout shift */
  border: 2px solid transparent; 
  /* Add default padding/border-radius if desired */
  padding-left: 0.5rem; 
  border-radius: 0.375rem;

  /* Smooth transition for border and outline colors */
  transition: border-color 0.2s ease-in-out, outline-color 0.2s ease-in-out;
}
.ProseMirror:focus,
.ProseMirror:focus-visible {
  outline: none !important;
  outline: 2px solid theme('colors.neutral.300');
  outline-offset: 2px;
  border-color: theme('colors.neutral.300');
}
.dark .ProseMirror:focus,
.dark .ProseMirror:focus-visible {
  outline-color: theme('colors.neutral.600');
  border-color: theme('colors.neutral.600');
}



.tiptap h1,
.tiptap h2,
.tiptap h3 {
  font-weight: 600;
  line-height: 1.2;
  margin: 0.75rem 0 0.5rem;
}
.tiptap h1 { font-size: 1.625rem; }
.tiptap h2 { font-size: 1.375rem; }
.tiptap h3 { font-size: 1.125rem; }
.tiptap p { margin: 0.5rem 0; }
.tiptap ul,
.tiptap ol {
  padding-left: 1.25rem;
  margin: 0.5rem 0;
}
.tiptap ul { list-style: disc; }
.tiptap ol { list-style: decimal; }
.tiptap li { margin: 0.25rem 0; }

/* --- 5. Corrected Checklists --- */
/* --- Corrected Checklists (Replace existing) --- */
/* Styling for Tiptap Task Lists - THIS IS ESSENTIAL */
.tiptap ul[data-type='taskList'] {
  list-style: none;
  padding: 0;
}

.tiptap ul[data-type='taskList'] li {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.tiptap ul[data-type='taskList'] li > label {
  flex: 0 0 auto;
  margin-right: 0.5rem;
  margin-top: 0.3rem;
  user-select: none;
}

.tiptap ul[data-type='taskList'] li > div {
  flex: 1 1 auto;
}

.tiptap ul[data-type='taskList'] li > label input[type='checkbox'] {
  cursor: pointer;
}

.tiptap ul[data-type='taskList'] li[data-checked='true'] > div > p {
  text-decoration: line-through;
  opacity: 0.6;
}

/* 1. Hide the default browser checkbox */
.tiptap ul[data-type='taskList'] li > label input[type='checkbox'] {
  appearance: none;
  -webkit-appearance: none;
  background-color: transparent;
  margin: 0;
  font: inherit;
  color: currentColor;
  width: 18px;
  height: 18px;
  border-radius: 50%; /* Make it a circle */
  cursor: pointer;
  position: relative;
  
  /* Unchecked state border */
  border: 2px solid #c7c7c7;

  /* Smooth transition for checking/unchecking */
  transition: all 0.15s ease-in-out;
}

/* 2. Style the checked state */
.tiptap ul[data-type='taskList'] li > label input[type='checkbox']:checked {
  background-color: #ffcc00; /* macOS yellow */
  border-color: #ffcc00;
}

/* 3. Create the checkmark using a pseudo-element */
.tiptap ul[data-type='taskList'] li > label input[type='checkbox']:checked::after {
  content: '';
  position: absolute;
  /* Position the checkmark inside the circle */
  left: 5px;
  top: 2px;
  /* Size of the checkmark */
  width: 4px;
  height: 8px;
  /* Style the checkmark */
  border: solid white; /* Checkmark color */
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

/* 4. Style the text for a completed item */
.tiptap ul[data-type='taskList'] li[data-checked='true'] > div > p {
  text-decoration: line-through;
  color: #9a9a9a; /* Softer color for completed text */
  opacity: 0.8;
}


/* === Dark Mode Adjustments === */
.dark .tiptap ul[data-type='taskList'] li > label input[type='checkbox'] {
  /* Lighter border for better contrast on dark backgrounds */
  border-color: #5a5a5a;
}

.dark .tiptap ul[data-type='taskList'] li > label input[type='checkbox']:checked {
  /* The yellow works well in dark mode, but you can adjust if needed */
  background-color: #ffcc00;
  border-color: #ffcc00;
}

.dark .tiptap ul[data-type='taskList'] li[data-checked='true'] > div > p {
  color: #737373; /* Adjust completed text color for dark mode */
}

/* Blockquote - FIXED */
.tiptap blockquote {
  border-left: 3px solid var(--blockquote-border);
  padding-left: 0.75rem;
  color: var(--blockquote-text);
  margin: 0.75rem 0;
}

/* Inline code and code blocks - FIXED */
.tiptap code {
  font-family: var(--font-mono);
  background: var(--code-bg);
  color: var(--code-text);
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
}
.tiptap pre {
  background: var(--code-bg);
  border: 1px solid var(--blockquote-border); /* Re-used a compatible variable */
  border-radius: 0.375rem;
  padding: 0.75rem 1rem;
  overflow-x: auto;
  margin: 0.75rem 0;
}
.tiptap pre code {
  background: transparent;
  padding: 0;
}

/* Highlight (mark) - FIXED */
.tiptap mark,
.tiptap .hl,
.tiptap mark[data-type="highlight"] {
  background: var(--highlight-bg);
  color: inherit;
  border-radius: 0.15rem;
  padding: 0 0.05rem;
}

/* Links - FIXED */
.tiptap a {
  color: var(--link-text);
  text-decoration: underline;
  text-underline-offset: 2px;
}

/* Images & Alignment (OK) */
.tiptap img {
  max-width: 100%;
  height: auto;
  border-radius: 0.375rem;
}
.tiptap [style*="text-align:center"] {
  margin-left: auto;
  margin-right: auto;
}

/* === Tiptap Table Styling === */

/* Basic table styles */
.tiptap table {
  width: 100%;
  max-width: 100%;
  border-collapse: collapse;
  margin: 1rem 0;
  margin-right: 1rem;
  overflow: hidden; /* Ensures resizable handles are contained */
}

.tiptap th,
.tiptap td {
  border: 1px solid #d1d1d1; /* Light mode border */
  padding: 0.5rem 0.75rem;
  vertical-align: top;
  position: relative;
}

.tiptap th {
  font-weight: bold;
  background-color: #f4f4f4; /* Light mode header background */
  text-align: left;
}

/* Column resizing handles */
.column-resize-handle {
  position: absolute;
  right: -2px;
  top: 0;
  bottom: 0;
  width: 4px;
  background-color: #facc15; /* yellow-400 */
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.2s;
}

.tiptap table:hover .column-resize-handle {
    opacity: 1;
}

.tiptap .resize-cursor {
    cursor: col-resize;
}

/* === Dark Mode Table Styles === */
.dark .tiptap th,
.dark .tiptap td {
  border: 1px solid #4a4a4a; /* Dark mode border */
}

.dark .tiptap th {
  background-color: #2a2a2a; /* Dark mode header background */
}

.night-shift-enabled {
  /* This filter applies a warm overlay to everything */
  filter: sepia(0.3) brightness(0.95);
}

@layer base {
  :root {
    /* --- FIX: Wrapped color values in hsl() --- */
    --color-1: hsl(0 100% 63%);
    --color-2: hsl(270 100% 63%);
    --color-3: hsl(210 100% 63%);
    --color-4: hsl(195 100% 63%);
    --color-5: hsl(90 100% 63%);
  }
}

/* This is the keyframe animation for the rainbow effect */
@keyframes rainbow {
  to {
    background-position: 200% center;
  }
}

@keyframes color-cycle {
  0% {
    filter: hue-rotate(0deg);
  }
  100% {
    filter: hue-rotate(360deg);
  }
}

/* --- The Main Disco Ball Sphere --- */
@keyframes rotateDiscoBall {
  from { transform: rotateX(90deg) rotateZ(0deg); }
  to { transform: rotateX(90deg) rotateZ(360deg); }
}

@keyframes rotateDiscoBallMiddle {
  from { transform: rotateX(90deg) rotateY(0deg); }
  to { transform: rotateX(90deg) rotateY(-360deg); }
}

@keyframes reflect {
  0% { opacity: 1; }
  50% { opacity: 0.4; }
  100% { opacity: 1; }
}

@keyframes drop-in {
  0% { transform: translateY(-300px); }
  100% { transform: translateY(0); }
}

.rope {
  position: absolute;
  left: 0%;
  top: -200px;
  width: 4px;
  height: 250px;
  background: linear-gradient(to bottom, #444, #111);
  transform: translateX(-50%);
  z-index: 2;
}

.disco-ball-container {
  position: absolute;
  left: 50%;
  top: 0;
  transform: translateX(-50%);
  animation: drop-in 1.5s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
}

.disco-ball {
  transform-style: preserve-3d;
  width: 100px;
  height: 100px;
  position: relative;
  top: 50px;
  left: -50px;
  animation: rotateDiscoBall 18s linear infinite;
  z-index: 2;
}

.disco-ball-light {
  width: 100px;
  height: 100px;
  position: absolute;
  border-radius: 50%;
  background-color: white;
  opacity: 0.2;
  filter: blur(20px);
  z-index: 2;
}

.disco-ball-middle {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: linear-gradient(to bottom, #111, #333);
  position: absolute;
  transform-style: preserve-3d;
  animation: rotateDiscoBallMiddle 18s linear infinite;
}

.square {
  transform-style: preserve-3d;
  position: absolute;
  top: 46px;
  left: 46px;
  width: 6px;
  height: 6px;
}

/* --- Confetti Effect (Unchanged) --- */
.confetti-piece {
  position: absolute;
  width: 8px;
  height: 16px;
  background: #f00;
  top: -20px;
  opacity: 0;
  animation: confetti-fall 5s linear infinite;
}

@keyframes confetti-fall {
  0% {
    transform: translateY(0) rotateZ(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(110vh) rotateZ(360deg);
    opacity: 0;
  }
}